input: "data"
input_shape {
  dim: 16
  dim: 1
  dim: 96
  dim: 96
}
input: "labels"
input_shape {
  dim: 16
  dim: 1
  dim: 96
  dim: 96
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"

  param { lr_mult: 1,
       decay_mult: 1}
  param { lr_mult: 1,
       decay_mult: 0}
  convolution_param {
    kernel_size: 3
    num_output: 32
    stride: 1
    pad: 0
    group: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv1-relu"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "conv1"
  top: "conv2"

  param { lr_mult: 1,
       decay_mult: 1}
  param { lr_mult: 1,
       decay_mult: 0}
  convolution_param {
    kernel_size: 3
    num_output: 64
    stride: 1
    pad: 1
    group: 4
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv2-relu"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "conv2"
  top: "conv3"

  param { lr_mult: 1,
       decay_mult: 1}
  param { lr_mult: 1,
       decay_mult: 0}
  convolution_param {
    kernel_size: 3
    num_output: 64
    stride: 1
    pad: 1
    group: 4
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv3-relu"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"

  param { lr_mult: 1,
       decay_mult: 1}
  param { lr_mult: 1,
       decay_mult: 0}
  convolution_param {
    kernel_size: 3
    num_output: 64
    stride: 1
    pad: 1
    group: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv4-relu"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "concat4"
  bottom: "conv4"
  bottom: "conv1"
  top: "concat4"
  type: "Concat"
  concat_param {
    axis: 1
  }
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "concat4"
  top: "conv5"

  param { lr_mult: 1,
       decay_mult: 1}
  param { lr_mult: 1,
       decay_mult: 0}
  convolution_param {
    kernel_size: 3
    num_output: 64
    stride: 1
    pad: 0
    group: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv5-relu"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "conv6"
  type: "Convolution"
  bottom: "conv5"
  top: "conv6"

  param { lr_mult: 1,
       decay_mult: 1}
  param { lr_mult: 1,
       decay_mult: 0}
  convolution_param {
    kernel_size: 3
    num_output: 64
    stride: 1
    pad: 2
    group: 4
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv6-relu"
  type: "ReLU"
  bottom: "conv6"
  top: "conv6"
}
layer {
  name: "concat6"
  bottom: "conv6"
  bottom: "conv1"
  top: "concat6"
  type: "Concat"
  concat_param {
    axis: 1
  }
}
layer {
  name: "conv7"
  type: "Convolution"
  bottom: "concat6"
  top: "conv7"

  param { lr_mult: 1,
       decay_mult: 1}
  param { lr_mult: 1,
       decay_mult: 0}
  convolution_param {
    kernel_size: 3
    num_output: 128
    stride: 1
    pad: 0
    group: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv7-relu"
  type: "ReLU"
  bottom: "conv7"
  top: "conv7"
}
layer {
  name: "conv8"
  type: "Convolution"
  bottom: "conv7"
  top: "conv8"

  param { lr_mult: 1,
       decay_mult: 1}
  param { lr_mult: 1,
       decay_mult: 0}
  convolution_param {
    kernel_size: 3
    num_output: 1
    stride: 1
    pad: 0
    group: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv8-relu"
  type: "ReLU"
  bottom: "conv8"
  top: "conv8"
}

layer {
  type: 'Python'
  name: 'residual'
  top: 'residual'
  bottom: 'data'
  bottom: 'conv8'
  python_param {
    # the module name -- usually the filename -- that needs to be in $PYTHONPATH
    module: 'pyLayers'
    # the layer name -- the class name in the module
    layer: 'CroppedElementwiseLayer'
    param_str: 'SUM'
  }
  # set loss weight so Caffe knows this is a loss layer.
  # since PythonLayer inherits directly from Layer, this isn't automatically
  # known to Caffe
}
layer {
  type: 'Python'
  name: 'loss'
  top: 'loss'
  bottom: 'residual'
  bottom: 'labels'
  bottom: 'data'
  python_param {
    # the module name -- usually the filename -- that needs to be in $PYTHONPATH
    module: 'pyloss'
    # the layer name -- the class name in the module
    layer: 'CroppedEuclideanLossVisLayer'
    param_str: "PARAM__"
    #show:10
  }
  # set loss weight so Caffe knows this is a loss layer.
  # since PythonLayer inherits directly from Layer, this isn't automatically
  # known to Caffe
  loss_weight: 1
}
